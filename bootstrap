#!/bin/sh
# shellcheck disable=SC3040
set -euo pipefail

# Environment Variables
# 環境設定
export HOME="/tmp"
export BIN_DIR="${HOME}/.local/bin"
export PATH="${BIN_DIR}:$PATH"


# Installing aws cli
# aws cli のインストール
cd "${HOME}"
curl -sSL https://bootstrap.pypa.io/pip/3.6/get-pip.py -o get-pip.py
python3 get-pip.py --user
pip3 install awscli --user


# Install jq. Download the binary and add it to your path.
# jq のインストール。バイナリをダウンロードしてパスに追加する
curl -sSL https://github.com/stedolan/jq/releases/download/jq-1.6/jq-linux64 -o "${BIN_DIR}"/jq
chmod +x "${BIN_DIR}"/jq


# Initialization - load function handler
# shellcheck disable=SC1090,SC2086
. "${LAMBDA_TASK_ROOT}"/"$(echo $_HANDLER | cut -d. -f1).sh"


while true
do
    # Request the next event from the Lambda runtime
    HEADERS="$(mktemp)"
    EVENT_DATA=$(curl -v -sS -LD "$HEADERS" -X GET "http://${AWS_LAMBDA_RUNTIME_API}/2018-06-01/runtime/invocation/next")
    INVOCATION_ID=$(grep -Fi Lambda-Runtime-Aws-Request-Id "$HEADERS" | tr -d '[:space:]' | cut -d: -f2)

    # Execute the handler function from the script
    RESPONSE=$($(echo "$_HANDLER" | cut -d. -f2) "$EVENT_DATA")

    # Send the response to Lambda runtime
    curl -v -sS -X POST "http://${AWS_LAMBDA_RUNTIME_API}/2018-06-01/runtime/invocation/$INVOCATION_ID/response" -d "$RESPONSE"
done